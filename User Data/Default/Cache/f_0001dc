var videojs;
var BCPLAYER = BCPLAYER || (function() {
	'use strict';

	var init = function(Args) {
		_args = Args;
		player();
	};
	
	var createPlaceholder = function(imageUrl, vidStart) {
		if (!document.querySelector('#playerContainer').innerHTML || document.querySelector('#playerContainer').innerHTML === "&nbsp;") {
			document.querySelector('#playerContainer').innerHTML = '<img src="' + imageUrl + '" alt="Please return on ' + vidStart + '" />';
		}
	};
	
	var isLiveWindow = function(eventTime, eventLength) {		
		var eventLengthInSeconds = convertDisplaytoSeconds(eventLength);
		var distance = getCountDownData(eventTime);		

		if (distance < 0) {
			if (distance + eventLengthInSeconds > 0) {
				return 'isLive';
			} else {
				return 'isOver';
			}
		} else {
			return 'isPending';
		}
	};
	
	var countDownDisplay = function(dataObj) {

		// Update the count down every 1 second
		var x = setInterval(function () {
			var distance = getCountDownData(dataObj.countDownDate);

			// Time calculations for days, hours, minutes and seconds
			var days = Math.floor(distance / (60 * 60 * 24));
			var hours = Math.floor((distance % (60 * 60 * 24)) / (60 * 60));
			var minutes = Math.floor((distance % (60 * 60)) / 60);
			var seconds = Math.floor((distance % 60));

			// If the count down is finished, write some text 
			if (distance < 0) {
				clearInterval(x);
				if (window.location.href.split('?')[0] !== dataObj.redirectUrl) {
					window.location = dataObj.redirectUrl;					
				} else {
					dataObj.callBack();
					document.querySelector('#countDownContainer').remove();
				}

				return;
			}

			if (document.getElementById("countDownContainer") !== undefined && document.getElementById("countDownContainer") !== null) {
				document.getElementById("countDownContainer").innerHTML = "<div class='cd-digit'>" + 
					"<div class='cd-digit-wrapper days'>" + 
					"<div class='cd-digit-number' id='cd_d1'>" + days + "</div>" +
					"<div class='cd-digit-label' id='cd_d1t'>" + (days === 1 ? "day" : 'days') + "</div>" +
					"</div><div class='cd-digit-wrapper hours'>" + 
					"<div class='cd-digit-number' id='cd_h1'>" + hours + "</div>" +
					"<div class='cd-digit-label' id='cd_h1t'>" + (hours === 1 ? 'hour' : 'hours') + "</div>" +
					"</div><div class='cd-digit-wrapper mins'>" + 
					"<div class='cd-digit-number' id='cd_m1'>" + minutes + "</div>" +
					"<div class='cd-digit-label' id='cd_m1t'>" + (minutes === 1 ? 'minute' : 'minutes') + "</div>" +
					"</div><div class='cd-digit-wrapper secs" + (days === 0 && hours === 0 && minutes === 0 && seconds <= 10 ? ' red' : '') + "'>" + 
					"<div class='cd-digit-number' id='cd_s1'>" + seconds + "</div>" +
					"<div class='cd-digit-label' id='cd_s1t'>" + (seconds === 1 ? 'second' : 'seconds') + "</div>" +
					"</div></div>";
			} else {
				console.log('#countDownContainer not found. Add <div id="countDownContainer"></div> where you want the countdown to appear.');
			}
		}, 1000);

	};	

	/* Private */

	var _args = {};
	var urlParams;
	(function() {
		var match,
			pl     = /\+/g,  // Regex for replacing addition symbol with a space
			search = /([^&=]+)=?([^&]*)/g,
			decode = function(s) { return decodeURIComponent(s.replace(pl, " ")); },
			query  = window.location.search.substring(1);

		urlParams = {};
		while ((match = search.exec(query)) !== null) {
			urlParams[decode(match[1])] = decode(match[2]);
		}
	})();
	
	var getRandomInt = function(max) {
		return Math.floor(Math.random() * Math.floor(max));
	}

	var isMobileDevice = function() {
		return (typeof window.orientation !== 'undefined') || (navigator.userAgent.indexOf('IEMobile') !== -1);
	};
	
	var isUsingDataSaver = function() {
		if('connection' in navigator){
			if(navigator.connection.saveData) {
				return true;
			} else {
				return false;
			}
		} else {
			return false;
		}		
	};	

	var isVisible = function(e) {
		if (e === null) return;
		return !!( e.offsetWidth || e.offsetHeight || e.getClientRects().length );
	};

	var secondsToTime = function(s) {
		s = Math.floor(s);
		return (s-(s%=60))/60+(9<s?':':':0')+s;
	};
	
	var convertDisplaytoSeconds = function(time) {
		time = time.split(':');
		var minutes = parseInt(time[0]);
		var seconds = parseInt(time[1]);
		var totalSeconds = (minutes * 60) + seconds;

		return totalSeconds;
	};	
	
	var getCountDownData = function(data) {
		var countDownDate = new Date(data).getTime() / 1000 | 0;
		// Get todays date and time
		var d = new Date();
		var localTime = d.getTime() / 1000 | 0;
		var localOffset = d.getTimezoneOffset() * 60;
		var utc = localTime + localOffset;
		var offset = -4; // -5 for DST
		var location = utc + (3600 * offset);
		// Find the distance between now an the count down date
		var distance = countDownDate - location;
		
		return distance;
	};

	var inIframe = function() {
		try {
			return window.self !== window.top;
		} catch (e) {
			return true;
		}
	};	

	var player = function() {
		var ga = inIframe() ? window.parent[window.parent['GoogleAnalyticsObject'] || 'ga'] : window[window['GoogleAnalyticsObject'] || 'ga'];
		var bannerIsActive = false;
		var canTrack = false;
		var uaId;
		var videoTitle;
		var selectedThumbnail;
		
		if (urlParams.bsft_abandon === 'true') {
			_args.videoType = 'evergreen';
		}

		var checkVideoJS = setInterval(function() {
			if (videojs !== undefined && document.querySelector('[id="playerContainer"] video').parentNode.getAttribute('id') !== null) {
				setPlayerEvents();
				clearInterval(checkVideoJS);
			}
		}, 100);

		var getCurrentSeconds = function() {
			var now = new Date();
			return (now.getMinutes() * 60) + now.getSeconds();
		};

		var embedOptions = function() {
			var optionsString = '';
			for (var index in _args.playerOptions) {
				if (_args.playerOptions[index] === 'true') {
					optionsString += index + ' ';
				}
			}
			return optionsString;
		};

		var appendScript = function(src) {
			var newScript = document.createElement('script');
			newScript.src = src;
			document.head.appendChild(newScript);
		};

		var setDisplayElements = function(uaId) {
			var elements = _args.playerOptions.elements ? _args.playerOptions.elements : [];
			var orderButtonLink = _args.orderButtonClass ? document.querySelector('.' + _args.orderButtonClass + ' a').getAttribute('href') : '';
			var liveElement = document.querySelector('.vjs-live-display');
			
			// Add URL & tracking to Order Button if no URL
			if ((orderButtonLink === '#' && _args.orderButtonClass) || (orderButtonLink === '' && _args.orderButtonClass)) {
				document.querySelector('.' + _args.orderButtonClass + ' a').setAttribute('href', _args.orderUrl);
			}
			
				//analytics
				//Handled in GTM
//				if (canTrack) {
//					document.querySelector('.' + _args.orderButtonClass + ' a').addEventListener('click', function(e) {
//						ga('gtag_' + uaId + '.send', {
//							hitType: 'event',
//							eventCategory: 'Video',
//							eventAction: 'Order Button Click',
//							eventLabel: bcPlayer.mediainfo.name + ' (' + bcPlayer.mediainfo.id + ')'
//						});
//					});
//				}			

			var loopElements = function(elements) {
				for (var i = 0; i < elements.length; i++) {
					document.querySelector(elements[i]).setAttribute('style', 'display: block');
					
					if (elements[i] === '.video-js .vjs-live-display') {
						_args.playerOptions.descriptionText !== '' ? liveElement.innerHTML = liveElement.innerHTML.replace('LIVE', _args.playerOptions.descriptionText) : '';						
						document.querySelector('.vjs-live-control.vjs-control.vjs-hidden').setAttribute('style', 'display: flex !important');	
					}
				}
			};

			switch (_args.videoType.toLowerCase()) {
				case 'live':
					_args.playerOptions.descriptionText !== '' ? liveElement.innerHTML = liveElement.innerHTML.replace('LIVE', _args.playerOptions.descriptionText) : '';	
					liveElement.className = liveElement.className + ' vjs-exclusive';
					
					// Display the LIVE Text container
					document.querySelector('.vjs-live-control.vjs-control.vjs-hidden').setAttribute('style', 'display: flex !important');
					
//					// Create Rewind Button
//					var newElementBB = document.createElement('div');
//					var newImageBB = document.createElement('img');
//					
//					newElementBB.id = 'backButton';
//					newElementBB.setAttribute('class', 'vjs-control vjs-button');
//					newImageBB.setAttribute('src', 'https://s3.amazonaws.com/BanyanHill_com_webimages/img/back-button.png');
//					newElementBB.appendChild(newImageBB);					
//					
//					// Insert Rewind Button
//					document.querySelector('.vjs-control-bar').insertBefore(newElementBB, document.querySelector('.vjs-volume-panel'));
//					
//					document.querySelector('#backButton').addEventListener('click', function(e) {
//						e.preventDefault();
//						e.stopPropagation();
//						videojs(videojs.getAllPlayers()[0].id()).currentTime(0.01);
//						videojs(videojs.getAllPlayers()[0].id()).muted(false);
//						videojs(videojs.getAllPlayers()[0].id()).volume(1);
//
//						//analytics
//						if (canTrack) {
//							ga('gtag_' + uaId + '.send', {
//								hitType: 'event',
//								eventCategory: 'Video',
//								eventAction: 'Rewind Banner Click',
//								eventLabel: videojs(videojs.getAllPlayers()[0].id()).mediainfo.name
//							});
//						}
//					});					
					
					//elements.push('.vjs-progress-control.vjs-control');
					loopElements(elements);

					break;
				case 'replay':
					//elements.push('.vjs-time-control.vjs-current-time', '.vjs-progress-control.vjs-control', '.vjs-time-divider', '.vjs-duration');
					loopElements(elements);

					// Replace LIVE Text if replay
					document.querySelector('.vjs-live-control.vjs-control.vjs-hidden').setAttribute('style', 'display: flex !important');
					_args.playerOptions.descriptionText !== '' ? liveElement.innerHTML = liveElement.innerHTML.replace('LIVE', _args.playerOptions.descriptionText) : liveElement.innerHTML = liveElement.innerHTML.replace('LIVE', 'REPLAY');
					liveElement.className = liveElement.className + ' vjs-replay';

					break;
				case 'evergreen':
					loopElements(elements);
					break;
				case 'evergreen-controls':
					//elements.push('.vjs-time-control.vjs-current-time', '.vjs-progress-control.vjs-control', '.vjs-time-divider', '.vjs-duration');
					loopElements(elements);
					break;
				default:
					break;
			}
		};

		var setRewindElements = function(bcPlayer) {
			var rewindBanner = '<div class="rewindBanner">';
				rewindBanner += '<div class="rewindButton">';
				rewindBanner += '<div class="CTA-rewind-container">';
				rewindBanner += '<div class="CTA-rewind">Late? Click here to play from beginning.</div>';
				rewindBanner += '</div></div></div>';

			if (document.querySelector('.rewindBanner') === null) {
				if (isUsingDataSaver()) {
					document.querySelector('.mute-button-container').insertAdjacentHTML('afterEnd', rewindBanner);
				} else {
					document.querySelector('.CTA-overlay-container').insertAdjacentHTML('afterEnd', rewindBanner);
				}

				document.querySelector('.rewindBanner').addEventListener('click', function(e) {
					e.preventDefault();
					e.stopPropagation();
					bcPlayer.currentTime(0.01);
					bcPlayer.muted(false);
					bcPlayer.volume(1);
					if (isVisible(document.querySelector('.rewindBanner'))) {
						toggleElement('rewindBanner');
					}
					if (isVisible(document.querySelector('.mute-button-container'))) {
						toggleElement('mute-button-container');
					}

					clearTimeout(bannerTimeout);

					//analytics
					if (canTrack) {
						ga('gtag_' + uaId + '.send', {
							hitType: 'event',
							eventCategory: 'Video',
							eventAction: 'Rewind Banner Click',
							eventLabel: bcPlayer.mediainfo.name + ' (' + bcPlayer.mediainfo.id + ')'
						});
					}
				});				
			}			
			
			if (!isVisible(document.querySelector('.mute-button-container'))) {
				toggleElement('rewindBanner');
				
				var bannerTimeout = setTimeout(function() {
					if (isVisible(document.querySelector('.rewindBanner'))) {
						toggleElement('rewindBanner');
					}
				}, _args.displayRewindInSeconds*1000);				
			}
		};
		
		var displayButtonOnRefresh = function() {
			if (localStorage.getItem(_args.videoId)) {
				toggleElement(_args.orderButtonClass);
				bannerIsActive = true;
			}			
		};

		var toggleElement = function(elementClass) {
			if (elementClass === undefined) {
				console.warn('Cannot find element to toggle');
				return;
			}
				
			document.querySelector('[class="' + elementClass + '"]').style.transition = 'all 1s ease';

			if (window.getComputedStyle(document.querySelector('[class="' + elementClass + '"]'), null).getPropertyValue('display') === 'none') {
				document.querySelector('[class="' + elementClass + '"]').style.display = 'flex';

				setTimeout(function(){
					document.querySelector('[class="' + elementClass + '"]').style.visibility = 'visible';
					document.querySelector('[class="' + elementClass + '"]').style.opacity = '1';
				}, 50);
			} else {
				document.querySelector('[class="' + elementClass + '"]').style.visibility = 'hidden';
				document.querySelector('[class="' + elementClass + '"]').style.opacity = '0';

				setTimeout(function(){
					document.querySelector('[class="' + elementClass + '"]').style.display = 'none';
				}, 1000);
			}
		};

		var embedCode = '';
			embedCode += '<div class="close_popup" style="display: none;"><span>x</span></div>';
			embedCode += '<div style="position: relative; display: block;">';
			embedCode += '<div style="padding-top: 56.25%;">';
			embedCode += '<video data-video-id="' + _args.videoId + '" ';
			embedCode += 'data-account="5249346837001" ';
			embedCode += 'data-player="' + (_args.playerOptions.autoplay === 'false' ? 'BJbzp9Sym' : 'default') + '" ';
			embedCode += 'data-embed="default" ';
			embedCode += 'data-application-id ';
			embedCode += 'class="video-js" ';
			embedCode += embedOptions() + ' controls muted playsinline ';
			embedCode += 'style="position: absolute; top: 0px; right: 0px; bottom: 0px; left: 0px; width: 100%; height: 100%;"></video>';
			embedCode += '</div></div>';

		var callButton = '<a href="tel:' + (_args.callNumber ? _args.callNumber : '18665844096') + '" target="_blank">';
			callButton += '<div class="CTA-call-container">';
			callButton += '<div class="CTA-call">' + (_args.callText ? _args.callText : 'Call Us Now!') + ' <span>' + (_args.callNumber ? _args.callNumber : '1-866-584-4096') + '</span></div>';
			callButton += '<div class="CTA-arrow-container"><div class="CTA-arrow"><img src="https://s3.amazonaws.com/BanyanHill_com_webimages/img/arrow.png"></div></div>';
			callButton += '</div></a>';

		var chatButton = '<a href="https://banyanhill.com/" target="_blank">';
			chatButton += '<div class="CTA-chat-container">';
			chatButton += '<div class="CTA-chat">' + (_args.chatText ? _args.chatText : 'Chat Live Now!') + '</div>';
			chatButton += '<div class="CTA-arrow-container"><div class="CTA-arrow"><img src="https://s3.amazonaws.com/BanyanHill_com_webimages/img/arrow.png"></div></div>';
			chatButton += '</div></a>';

		var orderButton = '<a href="' + (_args.orderUrl ? _args.orderUrl : 'https://banyanhill.com') + '" target="_blank" style="margin-top: 30px;">';
			orderButton += '<div class="CTA-order-container">';
			orderButton += '<div class="CTA-order">' + (_args.orderText ? _args.orderText : 'Order Now!') + '</div>';
			orderButton += '<div class="CTA-arrow-container"><div class="CTA-arrow"><img src="https://s3.amazonaws.com/BanyanHill_com_webimages/img/arrow.png"></div></div>';
			orderButton += '</div></a>';

		var postRollHTML = '';
		if (_args.postRollHTML) {
			postRollHTML = _args.postRollHTML;
		} else {
			postRollHTML += '<div class="CTA-container"><div class="CTA-left">';
			postRollHTML += '<a href="https://banyanhill.com/" target="_blank">';
			postRollHTML += '<img src="https://tenmillion.wpengine.com/wp-content/uploads/2018/02/CryptoProfitSummit2.jpg" class="CTA-banner" />';
			postRollHTML += '</a>';
			postRollHTML += '</div>';
			postRollHTML += '<div class="CTA-right">';
			postRollHTML += isMobileDevice() ? callButton : chatButton;
			postRollHTML += orderButton;
			postRollHTML += '</div>';
			postRollHTML += '<div class="CTA-bottom">';
			// postRollHTML += '<div class="CTA-watch" id="postWatchAgain"><a href="https://banyanhill.com/" target="_blank">Watch Again!</a></div>';
			postRollHTML += '</div></div>';
			// postRollHTML += '<script>document.getElementById("postWatchAgain").onclick = function() {video.time(0);};</script>';
		}

		var midRollBanner = '';
			midRollBanner += '<div class="' + (_args.bannerClass ? _args.bannerClass : 'CTA-overlay-container') + '"><div class="CTA-right">';
			midRollBanner += _args.callButton === 'true' ? isMobileDevice() ? callButton : chatButton : '';
			midRollBanner += _args.orderButton === 'true' ? orderButton : '';
			midRollBanner += '</div></div>';

		document.querySelector('[id="playerContainer"]').innerHTML = embedCode;

		appendScript('https://players.brightcove.net/5249346837001/' + (_args.playerOptions.autoplay === 'false' ? 'BJbzp9Sym' : 'default') + '_default/index.min.js');
		
		// TODO: Add stick functionality to player
		// Don't rely on 'ha' var
		document.querySelector('#playerContainer .close_popup').addEventListener('click', function() {
			document.querySelector('#videoBox').classList.remove('out');
			ha = 99999;
		});		

		var setPlayerEvents = function() {
			var playerId = document.querySelector('[id="playerContainer"] video').parentNode.getAttribute('id');
			videojs(playerId).ready(function() {
				var trackingAvailable = function() {
					var checkCount = 0;
					var checkLimit = 10;
					var checkTimer = setInterval(function() {

						if (typeof ga === 'function' && ga.loaded === true && checkCount < checkLimit) {
							uaId = ga.getAll()[0].get('trackingId').replace(/-/g,'_');
							clearInterval(checkTimer);
							canTrack = true;
						} else if (checkCount <= checkLimit) {
							ga = window[window['GoogleAnalyticsObject'] || 'ga'];
							checkCount++;
						} else {
							// tracking is unavailable
							clearInterval(checkTimer);
						}
					}, 100); // check every 100ms for 1 second
				};

				var handleNonAutoPlay = function() {
					document.querySelector('.vjs-big-play-button').setAttribute("style", "display: none;");
					document.querySelector('.vjs-big-play-button').insertAdjacentHTML('beforeBegin', '<img id="click-prompt" src="https://s3.amazonaws.com/BanyanHill_com_webimages/img/clickhere_2.png" style="position: relative; width: 100%;" />');
					setThumbnail();

					document.querySelector('#click-prompt').addEventListener('click', function() {
						bcPlayer.play();
						bcPlayer.muted(false);
						bcPlayer.volume(volumeLevel);
						if (document.querySelector('#click-prompt')) document.querySelector('#click-prompt').parentNode.removeChild(document.querySelector('#click-prompt'));

						//analytics
						if (canTrack) {
							if (_args.thumbnail) {
//								ga('gtag_' + uaId + '.send', {
//									hitType: 'event',
//									dimension1: selectedThumbnail,
//									metric1: 1
//								});																
							} else {
								ga('gtag_' + uaId + '.send', {
									hitType: 'event',
									eventCategory: 'Video',
									eventAction: 'Manual Play Click',
									eventLabel: bcPlayer.mediainfo.name + ' (' + bcPlayer.mediainfo.id + ')'
								});								
							}
						}
					});
				};
				
				var setThumbnail = function() {
					if (_args.thumbnail) {
						var posterInterval = setInterval(function() {
							if (document.querySelector('video').getAttribute('poster') !== null) {
								_args.thumbnail.push(document.querySelector('video').getAttribute('poster'));

								var randomInt = Math.floor(Math.random() * _args.thumbnail.length);
								var thumbnail = _args.thumbnail[randomInt];
								var thumbnailName = thumbnail.split('/');						

								if (thumbnailName[thumbnailName.length - 1].indexOf('?') > -1) {
									selectedThumbnail = 'default';
								} else {
									selectedThumbnail = thumbnailName[thumbnailName.length - 1];
								}

								document.querySelector('.vjs-poster').setAttribute('style','background-image: url(' + thumbnail + ');');
								document.querySelector('video').setAttribute('poster', thumbnail);

								//analytics
//								setTimeout(function() {
//									if (canTrack) {
//										ga('gtag_' + uaId + '.send', {
//											hitType: 'event',
//											dimension1: selectedThumbnail,
//											metric2: 1
//										});
//									}
//								}, 1000);

								clearInterval(posterInterval);						
							}
						}, 50);
					}
				};				

				var bcPlayer = this,
					volumeLevel = 1;
				var overlayIsActive = false;
				var overlayIsComplete = false;
				var elementIsDisplay = false;
				var timeTracking = {
						watchedTime: 0,
						currentTime: 0,
						viewedTime: 0
						};
				var viewedTimer;
				var lastUpdated = 'currentTime';
				var randomInt = getRandomInt(16);
					uaId = trackingAvailable();

				if (_args.playerOptions.autoplay === 'true' && !isUsingDataSaver()) {
					var containerClass = 'mute-button-container';
					var muteContainer = '<div class="'+containerClass+'"></div>';
					document.querySelector('[id='+playerId+']').insertAdjacentHTML('afterBegin', muteContainer);

					// +++ Check if in Safari or on iOS +++
					// Try to determine if autoplay is an option
					if (videojs.browser.IS_IOS || videojs.browser.IS_SAFARI || videojs.browser.IS_FIREFOX || videojs.browser.CHROME_VERSION > 65 ) {
						// If true, go with the unmute button
						var button = document.createElement('button');
						var muteIcon = '<svg class="mute-icon" viewBox="65 65 110 110"><polygon fill="white" points="88 107 65 107 65 131 89 131 112 154 112 84"></polygon><g fill="none" stroke="white" stroke-width="10" stroke-linecap="round"><path class="volume__small-wave" d="M 142 86 C 151 107 151 130 142 151"></path><path class="volume__large-wave" d="M 165 74 C 178 97 178 140 165 163"></path></g></svg>';
						// +++ Configure the button +++
						button.textContent = 'Click here for sound';
						button.className += 'mute-button';
						// +++ Add the button to the container +++
						document.getElementsByClassName(containerClass)[0].insertBefore(button, document.getElementsByClassName(containerClass)[0].firstChild);
						button.insertAdjacentHTML('afterBegin', muteIcon);

						// +++ Add button's event listener +++
						document.querySelector('#' + bcPlayer.id()).addEventListener('click', function() {
							if (!isVisible(button)) {
								return;
							}

							bcPlayer.muted(false);
							bcPlayer.volume(volumeLevel);
							toggleElement(containerClass);

							//analytics
							if (canTrack) {
								ga('gtag_' + uaId + '.send', {
									hitType: 'event',
									eventCategory: 'Video',
									eventAction: 'Mute Button Click',
									eventLabel: bcPlayer.mediainfo.name + ' (' + bcPlayer.mediainfo.id + ')'
								});
							}

							if (bcPlayer.paused()) {
								bcPlayer.play();
							}
							
							if (getCurrentSeconds() > _args.gracePeriodInSeconds) {
								if ( _args.playerOptions.autoplay !== 'false' && ( _args.videoType.toLowerCase() !== 'evergreen' && _args.videoType.toLowerCase() !== 'evergreen-controls' ) ) {
									if (_args.restartOnClick !== 'true') {
										setTimeout(function() {
											setRewindElements(bcPlayer);	
										}, 2000);
									}
								}
							}
							
							if (_args.restartOnClick === 'true') {
								bcPlayer.pause();
								bcPlayer.currentTime(0.01);
								bcPlayer.play();
							}
						});

						// hide button controls if Mute button is hit
						document.querySelector('button[title="Mute"]').addEventListener('click', function() {
							//analytics
							if (canTrack) {
								ga('gtag_' + uaId + '.send', {
									hitType: 'event',
									eventCategory: 'Video',
									eventAction: 'Mute Button Click',
									eventLabel: bcPlayer.mediainfo.name + ' (' + bcPlayer.mediainfo.id + ')'
								});
							}

							if (window.getComputedStyle(document.querySelector('.mute-button-container')).getPropertyValue('display') === 'flex') {
								toggleElement(containerClass);
							}
						});
					} else {
						// +++ If not iOS or Safari start the audio +++
						bcPlayer.on('loadstart', function(){
							bcPlayer.muted(false);
							bcPlayer.volume(volumeLevel);
						});
					}
				} else {
					handleNonAutoPlay();
				}

				// player and video have been loaded
				bcPlayer.one('canplay', function() {
					document.querySelector('[id='+playerId+']').insertAdjacentHTML('afterBegin', midRollBanner);

					videoTitle = bcPlayer.mediainfo.name + ' (' + bcPlayer.mediainfo.id + ')';

					// on play, seek the video to current minutes:seconds, run once
					var currentSeconds = getCurrentSeconds();

					var types = {
						'live' : function() {
							if (localStorage.getItem(_args.videoId) && localStorage.getItem(_args.videoId) >= 3600) {
								bcPlayer.currentTime(localStorage.getItem(_args.videoId));
							} else {
								bcPlayer.currentTime(currentSeconds);								
							}
							
							if (currentSeconds > _args.gracePeriodInSeconds) {
								if (_args.playerOptions.autoplay !== 'false') {
									setRewindElements(bcPlayer);
								}
							}
						},
						'replay' : function() {
							if (currentSeconds > _args.gracePeriodInSeconds) {
								bcPlayer.currentTime(currentSeconds);
								if (_args.playerOptions.autoplay !== 'false') {
									setRewindElements(bcPlayer);
								}
							} else {
								//hit `seeked` event regardless
								bcPlayer.currentTime(0.01);
							}
							
							displayButtonOnRefresh();
						},
						'evergreen' : function() {
							if (urlParams.bsft_abandon === 'true'){
								bcPlayer.currentTime(parseInt(_args.bannerDisplayTime - 30));
							}							
							
							if (_args.autoResumeVideo === 'true') {
								if (localStorage.getItem(_args.videoId)) {
									bcPlayer.currentTime(localStorage.getItem(_args.videoId));
								} else if (currentSeconds > _args.gracePeriodInSeconds) {
									bcPlayer.currentTime(currentSeconds);
									if (_args.playerOptions.autoplay !== 'false') {
										setRewindElements(bcPlayer);
									}
								} else {
									//hit `seeked` event regardless
									bcPlayer.currentTime(0.01);
								}
							} else {
								//hit `seeked` event regardless
								bcPlayer.currentTime(0.01);
							}
							
							displayButtonOnRefresh();
						},
						'evergreen-controls' : function() {
							types['evergreen']();
						}
					};

					if (_args.videoType.toLowerCase() !== undefined) {
						types[_args.videoType.toLowerCase()]();
					}

					// set analytic event heartbeat
					// fired every minute
//					if (canTrack) {
//						setInterval(heartbeatTimer, 1*60*1000);
//					}

//					function heartbeatTimer() {
//						ga('gtag_' + uaId + '.send', {
//							hitType: 'event',
//							eventCategory: 'Video',
//							eventAction: 'Heartbeat',
//							eventLabel: videoTitle
//						});
//					}

					//analytics
					if (canTrack) {
						ga('gtag_' + uaId + '.send', {
							hitType: 'event',
							eventCategory: 'Video',
							eventAction: 'Play', // | ' + secondsToTime(bcPlayer.currentTime()),
							eventLabel:  videoTitle
						});
					}

					setDisplayElements(uaId);
				});

				// track viewedTime
				bcPlayer.on('play', function() {
					viewedTimer = setInterval(function() {
						timeTracking.viewedTime ++;
					}, 1000);
				});

				bcPlayer.on('timeupdate', function() {
					if (!bcPlayer.seeking()) {
						if (bcPlayer.currentTime() > timeTracking.watchedTime) {
							timeTracking.watchedTime = bcPlayer.currentTime();
							lastUpdated = 'watchedTime';
						} else {
							//tracking time updated after user rewinds
							timeTracking.currentTime = bcPlayer.currentTime();
							lastUpdated = 'currentTime';
						}
					}

					// display a banner at a certain time
					// below video player
					if (!bannerIsActive && _args.bannerDisplayTime) {
						var bannerDisplayInSeconds = convertDisplaytoSeconds(_args.bannerDisplayTime) + randomInt;
						
						if (bcPlayer.currentTime() > bannerDisplayInSeconds) {
							switch (_args.videoType.toLowerCase()) {
								case 'live':
									if (!bcPlayer.seeking()) {
										toggleElement(_args.orderButtonClass);
										bannerIsActive = true;

										// display overlay Banner simultaneously
										if (_args.linkBannerToButton === 'true') {
											toggleElement(_args.bannerClass ? _args.bannerClass : 'CTA-overlay-container');
										}

										if (canTrack) {
											ga('gtag_' + uaId + '.send', {
												hitType: 'event',
												eventCategory: 'Video',
												eventAction: 'Button Display | ' + secondsToTime(bcPlayer.currentTime()),
												eventLabel: videoTitle
											});
										}
									}
									break;
								case 'replay':
								case 'evergreen':
								case 'evergreen-controls':
									//display overlay banner only if unobstructed
									if (timeTracking.viewedTime >= _args.displayRewindInSeconds) {
										toggleElement(_args.orderButtonClass);
										bannerIsActive = true;

										// display overlay Banner simultaneously
										if (_args.linkBannerToButton === 'true') {
											toggleElement(_args.bannerClass ? _args.bannerClass : 'CTA-overlay-container');
										}

										if (canTrack) {
											ga('gtag_' + uaId + '.send', {
												hitType: 'event',
												eventCategory: 'Video',
												eventAction: 'Button Display | ' + secondsToTime(bcPlayer.currentTime()),
												eventLabel: videoTitle
											});
										}
									}
									break;
								default:
									break;
							}
						}
					}

					// display a banner if watched more than X seconds
					if (timeTracking.viewedTime >= _args.timeViewedBanner) {
						if (!overlayIsActive && !overlayIsComplete) {
							toggleElement('CTA-overlay-container');
							overlayIsActive = true;
						}
					}

					// remove the banner if watched more than X seconds
					// clear timer after banner viewed
					if (_args.timeViewedDismiss && timeTracking.viewedTime >= (_args.timeViewedBanner + _args.timeViewedDismiss)) {
						if (overlayIsActive && !overlayIsComplete) {
							toggleElement('CTA-overlay-container');
							overlayIsComplete = true;
							clearInterval(viewedTimer);
							viewedTimer = null;
							timeTracking.viewedTime = 0;
						}
					}
					
					// display & hide an element based on params
					if (_args.elementDisplay) {
						var elementDisplayInSeconds = convertDisplaytoSeconds(_args.elementDisplay.displayTime);
						var elementHideInSeconds = convertDisplaytoSeconds(_args.elementDisplay.hideTime);
						
						if (!elementIsDisplay) {
							if (bcPlayer.currentTime() > elementDisplayInSeconds && bcPlayer.currentTime() < elementHideInSeconds) {	
								toggleElement(_args.elementDisplay.containerClass);
								elementIsDisplay = true;
							}							
						} else {
							if (bcPlayer.currentTime() > elementHideInSeconds) {
								toggleElement(_args.elementDisplay.containerClass);
								elementIsDisplay = false;
							}
						}							
					}

					localStorage.setItem(_args.videoId, bcPlayer.currentTime());
				});

				bcPlayer.on('pause', function() {
					clearInterval(viewedTimer);
					viewedTimer = null;

					//analytics
					if (!bcPlayer.scrubbing() && !bcPlayer.seeking()) {
						if (canTrack) {
							ga('gtag_' + uaId + '.send', {
								hitType: 'event',
								eventCategory: 'Video',
								eventAction: 'Pause', // | ' + secondsToTime(bcPlayer.currentTime()),
								eventLabel: videoTitle
							});
						}
					}
				});

				// Remove ability to seek forward, allow rewind
				// Set after the `seeked` event to allow for initial seek
				bcPlayer.one('seeked', function() {
					bcPlayer.on('seeking', function() {
						clearInterval(viewedTimer);
						viewedTimer = null;

						// guard against infinite recursion:
						// user seeks, seeking is fired, currentTime is modified, seeking is fired, current time is modified, ....
						var delta = bcPlayer.currentTime() - timeTracking.watchedTime;
						var currentSeconds = getCurrentSeconds();

						if (delta > 1 ) {
							var handleSeeking = function() {
								bcPlayer.pause();
								if (bcPlayer.currentTime() > currentSeconds) {
									if (canTrack) {
										ga('gtag_' + uaId + '.send', {
											hitType: 'event',
											eventCategory: 'Video',
											eventAction: 'Seek Attempt | ' + secondsToTime(bcPlayer.currentTime()),
											eventLabel: videoTitle
										});
									}

									bcPlayer.currentTime(currentSeconds);
								} else if (bcPlayer.currentTime() === currentSeconds) {
									//do nothing
								} else {
									bcPlayer.currentTime(timeTracking[lastUpdated]);

									if (canTrack) {
										ga('gtag_' + uaId + '.send', {
											hitType: 'event',
											eventCategory: 'Video',
											eventAction: 'Seek | ' + secondsToTime(bcPlayer.currentTime()),
											eventLabel: videoTitle
										});
									}
								}
								if (bcPlayer.paused()) {
									bcPlayer.play();
								}
							};

							var types = {
								'live' : function() {
									handleSeeking();
								},
								'replay' : function() {
									handleSeeking();
								},
								'evergreen' : function() {},
								'evergreen-controls' : function() {}
							};

							if (_args.videoType.toLowerCase() !== undefined) {
								types[_args. videoType.toLowerCase()]();
							}
						}
					});

					bcPlayer.on('seeked', function() {
						var currentSeconds = getCurrentSeconds();

						var types = {
							'live' : function() {
								if (bcPlayer.currentTime() > currentSeconds) {
									if (canTrack) {
										ga('gtag_' + uaId + '.send', {
											hitType: 'event',
											eventCategory: 'Video',
											eventAction: 'Seek Attempt | ' + secondsToTime(bcPlayer.currentTime()),
											eventLabel: videoTitle
										});
									}

									bcPlayer.currentTime(currentSeconds);
								} else {
									if (canTrack) {
										ga('gtag_' + uaId + '.send', {
											hitType: 'event',
											eventCategory: 'Video',
											eventAction: 'Seek | ' + secondsToTime(bcPlayer.currentTime()),
											eventLabel: videoTitle
										});
									}
								}
							},
							'replay' : function() {
								if (bcPlayer.currentTime() > currentSeconds) {
									if (canTrack) {
										ga('gtag_' + uaId + '.send', {
											hitType: 'event',
											eventCategory: 'Video',
											eventAction: 'Seek Attempt | ' + secondsToTime(bcPlayer.currentTime()),
											eventLabel: videoTitle
										});
									}

									bcPlayer.currentTime(currentSeconds);
								} else {
									if (canTrack) {
										ga('gtag_' + uaId + '.send', {
											hitType: 'event',
											eventCategory: 'Video',
											eventAction: 'Seek | ' + secondsToTime(bcPlayer.currentTime()),
											eventLabel: videoTitle
										});
									}
								}
							},
							'evergreen' : function() {},
							'evergreen-controls' : function() {}
						};

						if (_args.videoType.toLowerCase() !== undefined) {
							types[_args.videoType.toLowerCase()]();
						}
					});
				});
				// on end, redirect after a set delay
				bcPlayer.on('ended', function() {
					if (_args.redirectUrl && _args.redirectUrl !== '') {
						setTimeout(function() {
							window.location = _args.redirectUrl;

							if (canTrack) {
								ga('gtag_' + uaId + '.send', {
									hitType: 'event',
									eventCategory: 'Video',
									eventAction: 'Redirect',
									eventLabel: videoTitle
								});
							}
						}, randomInt * 1000);
					}
					if (canTrack) {
						ga('gtag_' + uaId + '.send', {
							hitType: 'event',
							eventCategory: 'Video',
							eventAction: 'End',
							eventLabel: videoTitle
						});
					}

					localStorage.removeItem(_args.videoId);
				});
			});
		};
	};	
	
	return {
		init: init,
		isLiveWindow: isLiveWindow,
		countDownDisplay: countDownDisplay,
		createPlaceholder: createPlaceholder,
		urlParams: urlParams,
	};
}());
